scalar DateTime
scalar JSON
scalar Void
scalar Money
scalar WKT_4326

type User {
  id: Int!
  emailAddress: String!
}

type Role {
  id: Int!
  name: String!
  description: String
}

type Permission {
  id: Int!
  name: String!
  description: String
}

input ControlledVocabularyInput {
  root: String!
  tree: String!
  term: String!
}

type ControlledVocabulary {
  id: Int!
  term: String!
  children: [ControlledVocabulary!]
  tree: String!
  root: String!
}

type Query {
  projects(ids: [Int!]): [Project]!
  roles: [Role!]!
  permissions: [Permission!]!
  controlledVocabulary(root: String!, tree: String!): ControlledVocabulary
  users: [User!]
}

# type Subscription {}

type Mutation {
  integrateOldDb: JSON!
  updateVocabulary: JSON!
  # Create a project
  createProject(
    projectForm: ProjectInput!
    mitigationForms: [MitigationInput!]
    adaptationForms: [AdaptationInput!]
  ): Project!
  # Update a project
  updateProject(
    projectForm: ProjectInput!
    mitigationForms: [MitigationInput!]
    adaptationForms: [AdaptationInput!]
  ): Project!
}
