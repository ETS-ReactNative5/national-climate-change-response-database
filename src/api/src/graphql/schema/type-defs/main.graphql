scalar DateTime
scalar JSON
scalar Void
scalar Money
scalar WKT_4326

type User {
  id: Int!
  emailAddress: String!
}

type Role {
  id: Int!
  name: String!
  description: String
}

type Permission {
  id: Int!
  name: String!
  description: String
}

input ControlledVocabularyInput {
  root: String!
  tree: String!
  term: String!
}

type ControlledVocabulary {
  id: Int!
  term: String!
  children: [ControlledVocabulary!]
  tree: String!
  root: String!
  geometry(simplified: Boolean): WKT_4326
}

input VocabularyFilterInput {
  field: String!
  term: String!
}

input MitigationFiltersInput {
  ids: [Int!]
  vocabularyFilters: [VocabularyFilterInput!]
}

input AdaptationFiltersInput {
  ids: [Int!]
  vocabularyFilters: [VocabularyFilterInput!]
}

type Query {
  # Search projects
  projects(
    ids: [Int!]
    vocabularyFilters: [VocabularyFilterInput!]
    mitigationFilters: MitigationFiltersInput
    adaptationFilters: AdaptationFiltersInput
  ): [Project]!
  # Search vocabulary tress
  controlledVocabulary(root: String!, tree: String!): ControlledVocabulary
  # Search users
  users: [User!]
  # Search roles
  roles: [Role!]!
  # Search permissions
  permissions: [Permission!]!
}

# type Subscription {}

type Mutation {
  integrateOldDb: JSON!
  updateVocabulary: JSON!
  # Create a project
  createProject(
    projectForm: ProjectInput!
    mitigationForms: [MitigationInput!]
    adaptationForms: [AdaptationInput!]
  ): Project!
  # Update a project
  updateProject(
    projectForm: ProjectInput!
    mitigationForms: [MitigationInput!]
    adaptationForms: [AdaptationInput!]
  ): Project!
}
