name: deploy@next

on:
  push:
    branches:
      - next

env:
  REGISTRY: ghcr.io
  NCCRD_IMAGE_NAME: saeon/nccrd_next
  NGINX_IMAGE_NAME: saeon/nccrd_next_nginx
  BRANCH_REF: next

jobs:
  build-nginx:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared) 
        uses: SAEON/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}
          tags: |
            type=sha
      - name: Build and push NCCRD
        uses: docker/build-push-action@v2
        with:
          context: src/nginx
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-nccrd:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared) 
        uses: SAEON/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NCCRD_IMAGE_NAME }}
          tags: |
            type=sha
      - name: Build and push NCCRD
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            NCCRD_HOSTNAME=https://nccrd.saeon.ac.za
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build-nginx, build-nccrd]
    runs-on: github-runner.saeon.int
    steps:
      - name: Check out source code (int)
        uses: SAEON/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: (SCP) Copy Docker files to app server
        uses: SAEON/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          source: "deploy/next/docker-compose.yml"
          target: "nccrd-next"

      - name: (SSH) Deploy Docker stack
        uses: SAEON/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          script: |
            echo "MSSQL_PASSWORD=${{ secrets.MSSQL_PASSWORD }}" > /home/runner/nccrd-next/deploy/next/docker-compose.env
            echo "MSSQL_USERNAME=${{ secrets.MSSQL_USERNAME }}" >> /home/runner/nccrd-next/deploy/next/docker-compose.env
            echo "NCCRD_IMAGE=${{ needs.build-nccrd.outputs.image }}" >> /home/runner/nccrd-next/deploy/next/docker-compose.env
            echo "NGINX_IMAGE=${{ needs.build-nginx.outputs.image }}" >> /home/runner/nccrd-next/deploy/next/docker-compose.env
            echo "SAEON_AUTH_CLIENT_SECRET=${{ secrets.SAEON_AUTH_CLIENT_SECRET }}" >> /home/runner/nccrd-next/deploy/next/docker-compose.env
            sudo /opt/deploy-docker-stack.sh /home/runner/nccrd-next/deploy/next/docker-compose.yml /home/runner/nccrd-next/deploy/next/docker-compose.env nccrd_next
